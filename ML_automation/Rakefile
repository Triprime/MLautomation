# Rakefile
task default: [:help]

task :help do
	puts "
	Permissions testing can be performed in two ways: URL Access or Functional.


	URL Access tests check to see if a user who has a certain permission granted can access
	the urls they should be able to access, and not urls they shouldn't be able to access.

	URL Access tests will not fail if expected access fails.
	During the test, groups of urls will be tested via GET requests (not UI navigation).
	The result of each url GET will be displayed as the test progresses.
	At the end of the test, a summary will display any discrepencies found.
	

	Functional tests check to see if a user can do a certain thing that should be allowed
	by their granted permission(s). [These tests are not yet ready for use.]
	

	Before running any tests, ensure your local files are up to date with: git pull


	To see additional information about running URL Access tests, type: rake url_instructions
	\n"
end

task :url_instructions do
	puts"
	To run a URL Access test, use the following convention to type a command in your terminal interface:
	rake url_tests <environment> <user_permission> <url_groups_to_test>
	
	example: rake url_tests mwho project_lead all_defaults

	rake 		(required) is the test runner tool
	url_tests 	(required) is the name of the test to be run 
	mwho 		(required) is the short name for the testing environment https://app.mwho.mvn.link/
	project_lead	(required) is the permission level (access_group) for the user to be used for the test 
	all_defaults	(optional) indicates that urls for all default access_groups will be attempted (if argument not provided, 'all_defaults' will be used)

	This example will login on the mwho environment with a user that has project_lead permission,
	then test to see if that user can access urls for all default access groups.
	

	NOTE: Currently, only the mwho environment has been setup to run URL Access tests,
	and only the 'url_tests' test is built to be used by rake. 
	Not all urls have been included in each access_group at this point.
	No Functional tests exist yet.


	Command:
	rake url_tests <environment> <user_permission> <url_groups_to_test>
	
	Available arguments:
	<environment>
		mwho
		railsnext

	<user_permission>
		admin
		report_viewer_with_cost
		report_viewer
		project_lead
		project_creator
		collaborator
		punch_clock

	<url_groups_to_test>	(each default group includes all 'lower' groups)
		admin, all_defaults	 	(empty.  this is the default setting)
		rvc, report_viewer_with_cost	(empty)
		rv, report_viewer 		(empty)
		prl, project_lead 		(incomplete)
		prc, project_creator
		co, collaborator
		pc, punch_clock

	NOTE: A space MUST be used to separate each argument.
	\n"
end

task :example do
	ARGV.each { |a| task a.to_sym do ; end }

	ARGV.each do |a|
		puts "#{a}"
	end
end

task :url_tests do
	ARGV.each { |a| task a.to_sym do ; end }

	# arg 0 = rake command to run (url_tests)
	# arg 1 = environment to test on (mwho, prod, etc)
	# arg 2 = user permission/access_group to test with (punch_clock, collaborator, etc)
	# arg 3 = url groups to test against (all_defaults, rvc, rv, prl, prc, co, pc)

	ENV['environment']=ARGV[1].to_s
	ENV['permission']=ARGV[2].to_s
	ENV['urls']=ARGV[3].to_s || "all_defaults"

	ruby "tests/url_tests.rb"
end

task :permissions do
	ARGV.each { |a| task a.to_sym do ; end }
	# arg 0 = rake command to run (url_tests)

	def get_parameters
		# get available envs
		STDOUT.puts "Enter environment to run tests on: (mwho, etc.): "
		ENV['environment']=STDIN.gets.strip.downcase
		# validate input

		# get available user permission levels for the env
		STDOUT.puts "Enter the permission level of the USER for this test: "
		ENV['permission']=STDIN.gets.strip.downcase
		# validate input
		
		# get available url permission levels for the env
		STDOUT.puts "Enter the permission level of the URLS for this test (all_defaults will be used if nothing is entered): "
		ENV['urls']=STDIN.gets.strip.downcase
		# validate input
		if ENV['urls'] ==  "" || ENV['urls'] == nil
			ENV['urls'] = "all_defaults"
		end
	end

	get_parameters
	# verify before starting test run
	STDOUT.puts ENV['environment']
	STDOUT.puts ENV['permission']
	STDOUT.puts ENV['urls']
	STDOUT.puts "Continue Y/N?"
	continue = STDIN.gets.strip.downcase
	if continue == "y"
		# ruby "tests/url_tests.rb"
		STDOUT.puts "running test..."
	else
		STDOUT.puts "Select \n'1' to Quit \n'2' to input new test parameters"
		quit = STDIN.gets.strip.downcase
		if quit == '2'
			get_parameters
		end
	end
end

task :all_default_groups do
	ARGV.each { |a| task a.to_sym do ; end }

	# arg 0 = rake command to run (all_default_groups)
	# arg 1 = environment to test on (mwho, prod, etc)

	ENV['environment']=ARGV[1].to_s
	ENV['urls']="all_defaults"

	ags = ["admin", "report_viewer_with_cost", "report_viewer", "project_lead", "project_creator", "collaborator", "punch_clock"]
	
	ags.each do |ag|
		ENV['permission']=ag
		ruby "tests/url_tests.rb"
	end
end

